#N canvas 424 244 868 521 10;
#N canvas 827 84 582 570 REFERENCE 0;
#X text 24 116 Argument 1: midi channel (optional);
#X text 24 95 Argument 0: controller number (optional);
#X text 24 31 Name: [m_ctlin];
#X text 23 145 Inlet 0: <bang> - start learn mode \, "set" <float>
<float> - set the ctl number and channel;
#X text 24 211 Outlet 1: <float> <float> - ctl number & channel pair
;
#X text 24 191 Outlet 0: <float> - ctl value (0-127);
#X text 24 403 See also: [ctlin];
#X text 24 434 Tags: midi \, control values \, learning;
#X text 24 257 Description: This is a slightly modded [midilearn.mmb]
from the mmb abstraction library: https://github.com/dotmmb/mmb. It's
basically a wrapper around [ctlin] that can learn it's ctl number and
channel when banged. 1 Send a bang to put it in learn mode. 2 Send
a control chnage message from your MIDI controller (turn a knob \,
move \, a fader \, etc). That ctl number and channel will be learned
and it's value passed out the left outlet. The right outlet will outlet
the current ctrl number and channel.;
#X text 24 51 Summary: a [ctlin] that can learn it's control number
and midi channel when banged;
#X coords 0 -1 1 1 450 450 1 10 10;
#X restore 5 48 pd REFERENCE;
#X obj 5 18 cnv 15 450 20 empty empty empty 20 12 0 14 -261234 -66577
0;
#X text 468 51 Example:;
#X text 481 488 rc-patches (https://github.com/danomatika/rc-patches)
- 2013;
#X obj 488 123 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X floatatom 488 380 5 0 0 1 value - -;
#X obj 551 313 unpack f f;
#X floatatom 551 344 5 0 0 1 ctl - -;
#X floatatom 608 344 5 0 0 1 channel - -;
#X msg 513 231 set 92 2;
#X obj 488 281 m_ctlin 1 1;
#X obj 8 20 m_ctlin;
#X text 577 230 set the control number & channel manually;
#X text 516 186 (turn a knob \, move a fader \, etc.);
#X text 510 123 1 send a bang to put it in learn mode.;
#X text 510 169 2 send a control change message from your MIDI controller
;
#X text 129 21 - ctlin that can learn it's ctl num & channel;
#X connect 4 0 10 0;
#X connect 6 0 7 0;
#X connect 6 1 8 0;
#X connect 9 0 10 0;
#X connect 10 0 5 0;
#X connect 10 1 6 0;
